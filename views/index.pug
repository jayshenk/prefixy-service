extends layout

append head
  link(rel="stylesheet" href="/stylesheets/autocomplete.css")

prepend body
  form(class="mobile hidden positioned right" method="post" action="/tokens")
    input(
      class="ui primary basic button"
      type="submit"
      value="Auto-generate now!"
    )

block content
  .section.wrapper
    h1(class="ui huge centered header") Prefixy
    h3(class="subheading") Need a dynamic google-style autocomplete for your web application? Get up and running with our service in 30 seconds. We'll handle the hosting for you, so that you can get back to developing your core application. Because autocomplete should just work.

  .section.wrapper
    form(
      id="demo1-form"
      class="ui center aligned container"
      action="#"
      onsubmit="return false;"
    )
      .ui.labeled.large.input
        .ui.label Demo:
        input(
          id="demo1"
          type="search"
          placeholder="Start typing..."
        )

  .section.wrapper
    h2 Autocomplete that just works
    p Prefixy is a hosted prefix search engine that powers autocomplete suggestions for your site. Suggestions dynamically update in response to user input, so your users are guaranteed to only see the most relevant suggestions.
    p We've invested hundreds of hours of work into figuring out how to configure and implement a suggestion engine that is performant, useful, and scalable. And we've even written all the front-end scripts you need to get started! Just include them in your code and enjoy instant integration with our back-end remote servers.

  .section.wrapper
    form(
      class="ui center aligned container"
      method="post"
      action="/tokens"
    )
      input(
        class="large ui primary button"
        type="submit"
        value="Ready? 1-click auto-generate now")

  .section.wrapper
    h2 Tell me the technical details&nbsp;
      i(class="big code icon")
    p Prefixy persists data using a prefix hash trie, a cross between a hash and a trie. Suggestions are specifically stored with Redis sorted sets, a native data structure in Redis that is built on top of the skip list. With this powerhouse combination of data structures, we are able to get O(1) lookups. Not too shabby for autocomplete!
    p Other features:
    ul
      li Smart cacheing with Redis keeps high-priority suggestions in memory
      li MongoDB acts as our fallback and system of record for datasets that are too large to fit in memory
      li Built-in memory management techniques based on streaming algorithms are invisible to the app developer
      li Optimal settings like minChars, maxChars, and delay are already configured for you

  .section.wrapper
    h2 Show me another demo
    p Go ahead. Play around with it. Type something, click on the suggestions, and try to submit the form. If you refresh the page, you should see the suggestion you searched for in a higher position than before.

  .section.wrapper
    form(
      class="ui center aligned container"
      action="#"
      onsubmit="return false;"
    )
      .ui.labeled.large.input
        .ui.label Demo:
        input(
          id="demo2"
          type="search"
          placeholder="Start typing..."
        )

  .section.wrapper
    h2 I want to do this myself&nbsp;
    p Do you have a particular use case that requires more granular control? While we plan to expose configurable options to app developers in the future, we have open sourced all the technology behind Prefixy. Fork or clone our Github repo and you can start customizing Prefixy for your own use case today.

  .section.wrapper
    .ui.center.aligned.container
      .ui.stackable.three.column.grid
        .column
          a(
            class="big fluid ui button"
            download
            href="https://github.com/walidwahed/prefixy-lib/archive/master.zip"
          ) Download Zip
        .column
          a(
            class="big fluid ui button"
            target="_blank"
            href="https://github.com/walidwahed/prefixy-lib"
          ) View Github
        .column
          i(class="huge fork icon")

append body
  script(src="https://unpkg.com/axios/dist/axios.min.js")
  script(src="/prefixy.js")
  script.
    const demoToken = "#{demoToken}";
    const form1 = document.getElementById("demo1-form");
    const input1 = document.getElementById("demo1");
    const opts = {
      input: input1,
      form: form1,
      token: demoToken
    };

    new Prefixy(opts);
