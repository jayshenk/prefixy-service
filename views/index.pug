extends layout

append head
  link(rel="stylesheet" href="/prefixy.css")

block menu
  nav(class="ui inverted menu")
    include partials/_nav_items.pug
    .right.menu
      form(class="mobile hidden item" method="post" action="/tokens")
        input(
          class="ui primary button"
          type="submit"
          value="Auto-generate now!"
        )

block content
  .section.wrapper
    h1(class="ui huge centered header") prefixy
    h3(class="subheading") Need a dynamic google-style autocomplete for your web application? Get up and running with our service in just a few minutes. We deal with the servers for you, so that you don't have to.

  .section.wrapper
    form(
      id="demo1-form"
      class="ui center aligned container"
      action="#"
    )
      .ui.labeled.large.input
        .ui.label Demo:
        input(
          id="demo1"
          type="search"
          placeholder="Start typing..."
        )

  .section.wrapper
    h2 Autocomplete that just works
    p Prefixy is a hosted prefix search engine that powers autocomplete suggestions for your site. Suggestions dynamically update in response to user input, so your users are guaranteed to only see the most relevant suggestions.
    p We've invested hundreds of hours of work into figuring out how to configure and implement a suggestion engine that is performant, useful, and scalable. And we've even written all the front-end scripts you need to get started! Just include them in your code and enjoy instant integration with our back-end remote servers.

  .section.wrapper
    form(
      class="ui center aligned container"
      method="post"
      action="/tokens"
    )
      input(
        class="large ui primary button"
        type="submit"
        value="Ready? 1-click auto-generate now")

  .section.wrapper
    h2 Tell me the technical details&nbsp;
      i(class="big code icon")
    p Prefixy persists data using a prefix hash trie, a cross between a hash and a trie. Suggestions are specifically stored with Redis sorted sets, a native data structure in Redis that is built on top of the skip list. With this combination of data structures, we are able to return suggestions in O(1) time. Not too shabby for autocomplete!
    p Other features:
    ul
      li High-priority suggestions are kept in memory in our Redis data store
      li Long-tail suggestions are stored in MongoDB, for tenants whose datasets are too large to fit entirely in memory
      li Built-in memory management techniques based on streaming algorithms are invisible to the app developer
      li Optimal settings like minChars, maxChars, and delay are already configured for you

  .section.wrapper
    h2 Show me another demo
    p Go ahead. Play around with it. Type something, click on a suggestion, or continue typing something new, and press Enter. Depending on the ranking of other suggestions, the next time you type, you may see the suggestion you searched for in a higher position than before, or as a brand new suggestion.

  .section.wrapper
    form(
      id="demo2-form"
      class="ui center aligned container"
      action="#"
    )
      .ui.labeled.large.input
        .ui.label Demo:
        input(
          id="demo2"
          type="search"
          placeholder="Start typing..."
        )

  .section.wrapper
    p Don't see it? It may just be that the suggestion doesn't have a high enough score yet relative to other suggestions. If you keep typing though, you should see it pop up. For instance, if you selected "charizard is awesome", you'll have a greater chance of seeing it pop up in the dropdown if you type "charizard" in the input field rather than just "c". Pretty neat right?

  //- .section.wrapper
  //-   h2 Contribute
  //-   p Prefixy is an open source project and we welcome contributions from the community.

  //- .section.wrapper
  //-   .ui.center.aligned.container
  //-     .ui.stackable.three.column.grid
  //-       .column
  //-         a(
  //-           class="big fluid ui button"
  //-           target="_blank"
  //-           href="https://github.com/prefixy/prefixy"
  //-         ) Prefixy Github
  //-       .column
  //-         i(class="huge fork icon")

append body
  script(src="https://unpkg.com/axios/dist/axios.min.js")
  script(src="/prefixy.js")
  script.
    const demoToken = "#{demoToken}";
    const form1 = document.getElementById("demo1-form");
    const input1 = document.getElementById("demo1");
    const form2 = document.getElementById("demo2-form");
    const input2 = document.getElementById("demo2");

    const demo1 = new Prefixy({
      input: input1,
      form: form1,
      token: demoToken
    });

    const demo2 = new Prefixy({
      input: input2,
      form: form2,
      token: demoToken
    });
